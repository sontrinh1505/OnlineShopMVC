@model Models.EF.Category

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}



<div class="col-md-12 col-sm-12 col-xs-12">
    <div class="x_panel">
        <div class="x_title">
            <h2>Category <small>Create</small></h2>
            <ul class="nav navbar-right panel_toolbox">
                <li>
                    <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                </li>
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false"><i class="fa fa-wrench"></i></a>
                    <ul class="dropdown-menu" role="menu">
                        <li>
                            <a href="#">Settings 1</a>
                        </li>
                        <li>
                            <a href="#">Settings 2</a>
                        </li>
                    </ul>
                </li>
                <li>
                    <a class="close-link"><i class="fa fa-close"></i></a>
                </li>
            </ul>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">



            @using (Html.BeginForm("create", "Category", FormMethod.Post, new { @class = "form-horizontal form-label-left", @id="create-category"}))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                <div class="item form-group">
                    @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control col-md-7 col-xs-12", @required = "required" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="item form-group">
                    @Html.LabelFor(model => model.Alias, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.Alias, new { @class = "form-control col-md-7 col-xs-12", @required = "required" })
                        @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="item form-group">
                    @Html.LabelFor(model => model.ParentId, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.ParentId, new { @class = "form-control col-md-7 col-xs-12", @required = "required" })
                        @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="item form-group">
                    @Html.LabelFor(model => model.Order, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        @Html.TextBoxFor(model => model.Order, new { @class = "form-control col-md-7 col-xs-12", @required = "required" })
                        @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="item form-group">
                    @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                    <div class="col-md-6 col-sm-6 col-xs-12">
                        <div class="checkbox">
                            @Html.DropDownListFor(model => model.Status, new List<SelectListItem>() {
                                new SelectListItem() { Selected = true, Text = "Active", Value = "true"},
                                new SelectListItem() { Selected = false, Text = "Blocked", Value = "false"},

                       },new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="ln_solid"></div>

                <div class="form-group">
                    <div class="col-md-6 col-md-offset-3">              
                        <button type="button" class="btn btn-primary">@Html.ActionLink("Cancel","index","category") </button>
                        <button id="send" type="submit" class="btn btn-success">Create</button>
                    </div>
                </div>

            }


        </div>
    </div>
</div>
